subprojects {
    apply plugin: "io.gitlab.arturbosch.detekt"

    detekt {
        toolVersion = detekt_version
        buildUponDefaultConfig = true
        config = files("$rootDir/config/detekt/detekt.yml")
    }

    tasks.named("detekt").configure {
        reports {
            html.required.set(true)
            xml.required.set(false)
            txt.required.set(false)
            sarif.required.set(false)
        }
    }

    afterEvaluate {
        // This is to avoid running the detekt task in every build task.
        // This way, we save on building times (check dependsOn build)
        def check = "check"
        if (tasks.getNames().contains(check)) {
            tasks.named(check).configure {
                dependsOn = dependsOn.findAll { it.name != 'detekt' }
            }
        }
    }
}

task copyDetektPrePushScript() {
    group = "tools"
    doLast {
        def origin = new File("${project.rootDir}/gradle-scripts/", "pre-push")
        def targetPath = "${project.rootDir}/.git/hooks/"

        if (!origin.exists()) {
            throw new GradleException("We can't find the origin pre-push file")
        } else {
            copy {
                from origin
                into targetPath
            }
            println "Copying \"${origin.name}\" to the .git/hook/ folder"
        }
    }
}
